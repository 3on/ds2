language: cpp

env:
  - TARGET="Android-ARM"
  - TARGET="Linux-ARM"
  - TARGET="Linux-X86"
  - TARGET="Linux-X86_64"
  - TARGET="Linux-X86_64" LLGS_TESTS="1"

matrix:
  allow_failures:
    - env: TARGET="Linux-X86_64" LLGS_TESTS="1"
  fast_finish: true

before_install:
  - if [ "$TARGET" = "Linux-ARM" ];     then sudo add-apt-repository -y ppa:linaro-maintainers/toolchain; fi
  - if [ "$TARGET" = "Linux-X86" ];     then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;      fi
  - if [ "$TARGET" = "Linux-X86_64" ];  then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;      fi
  - if [ "$LLGS_TESTS" = "1" ];         then sudo add-apt-repository -y ppa:andykimpe/cmake;              fi
  - sudo apt-get update

install:
  - if [ "$TARGET" = "Android-ARM" ];   then ./Support/Scripts/prepare-android-toolchain.sh "arm";        fi
  - if [ "$TARGET" = "Linux-ARM" ];     then sudo apt-get install -y g++-arm-linux-gnueabi;               fi
  - if [ "$TARGET" = "Linux-X86" ];     then sudo apt-get install -y g++-4.8-multilib;                    fi
  - if [ "$TARGET" = "Linux-X86_64" ];  then sudo apt-get install -y g++-4.8;                             fi
  # Running LLGS tests requires a recent enough cmake (for the LLVM cmake
  # step), and an install of lldb (for the tests to be able to use the lldb
  # python library without us building it).
  - if [ "$LLGS_TESTS" = "1" ];         then sudo apt-get install -y cmake swig lldb-3.3;                 fi

before_script:
  - mkdir -p build && cd build

script:
  - cmake -DCMAKE_TOOLCHAIN_FILE="../Support/CMake/Toolchain-${TARGET}.cmake" ..
  - make
  - if [ "$LLGS_TESTS" = "1" ]; then ../Support/Scripts/run-llgs-tests.sh; fi
